---
# To support TLS traffic against the Atlassian tools,
# we create a reverse proxy in front of them.
# We decided for nginx, because, we do not really need a load balancing solution.
- hosts: atlassian
  roles:
  - role: geerlingguy.nginx
    become: True
    nginx_upstreams:
    - name: bitbucket
      servers: {
        "{{ upstreams.bitbucket }}"
      }
    - name: confluence
      servers: {
        "{{ upstreams.confluence }}"
      }
    - name: jira
      servers: {
        "{{ upstreams.jira }}"
      }
    - name: crowd
      servers: {
        "{{ upstreams.crowd }}"
      }
    nginx_vhosts:
    - listen: "443 default_server ssl http2"
      server_name: "_"
      access_log: "/var/log/nginx/_.access.log"
      error_log: "/var/log/nginx/_.error.log"
      extra_parameters: |
        ssl_certificate /etc/ssl/{{ domain_name }}.pem;
        ssl_certificate_key /etc/ssl/private/{{ domain_name }}.key;
        ssl_protocols   TLSv1.1 TLSv1.2;
        ssl_ciphers     'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
    - listen: "443 ssl http2"
      server_name: "bitbucket.{{ domain_name }}"
      extra_parameters: |
        location / {
          proxy_pass http://bitbucket;
        }
    - listen: "443 ssl http2"
      server_name: "confluence.{{ domain_name }}"
      extra_parameters: |
        location / {
          proxy_pass http://confluence;
        }
    - listen: "443 ssl http2"
      server_name: "jira.{{ domain_name }}"
      extra_parameters: |
        location / {
          proxy_pass http://jira;
        }
    - listen: "443 ssl http2"
      server_name: "crowd.{{ domain_name }}"
      extra_parameters: |
        location / {
          proxy_pass http://crowd;
        }
    nginx_extra_http_options: |
      proxy_buffering    off;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Scheme $scheme;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   Host $http_host;
      proxy_set_header   X_FORWARDED_PROTO https;
     
  tasks:
  - name: update bitbucket properties
    blockinfile:
      path: /srv/atlassian/bitbucket/shared/bitbucket.properties
      block: |
        server.scheme=https
        server.proxy-port=443
        server.proxy-name=bitbucket.{{ domain_name }}
        server.secure=true
    become: True
    notify:
      - restart bitbucket service

  - name: update confluence properties
    xml:
      path: /opt/atlassian/confluence/conf/server.xml
      backup: True
      xpath: /Server/Service/Connector[@port='8090']
      attribute: "{{ item.attribute }}"
      value: "{{ item.value }}"
    with_items:
    - { attribute: scheme, value: https }
    - { attribute: secure, value: "true" }
    - { attribute: proxyName, value: "confluence.{{ domain_name }}" }
    - { attribute: proxyPort, value: 443 }
    become: True
    notify: restart confluence service

  - name: update jira properties
    xml:
      path: /opt/atlassian/jira/conf/server.xml
      backup: True
      xpath: /Server/Service/Connector[@port='8080']
      attribute: "{{ item.attribute }}"
      value: "{{ item.value }}"
    with_items:
    - { attribute: scheme, value: https }
    - { attribute: secure, value: "true" }
    - { attribute: proxyName, value: "jira.{{ domain_name }}" }
    - { attribute: proxyPort, value: 443 }
    become: True
    notify: restart jira service

  - name: update crowd properties
    xml:
      path: /opt/atlassian/atlassian-crowd-3.3.0/apache-tomcat/conf/server.xml
      backup: True
      xpath: /Server/Service/Connector[@port='8095']
      attribute: "{{ item.attribute }}"
      value: "{{ item.value }}"
    with_items:
    - { attribute: scheme, value: https }
    - { attribute: secure, value: "true" }
    - { attribute: proxyName, value: "crowd.{{ domain_name }}" }
    - { attribute: proxyPort, value: 443 }
    become: True
    notify: restart crowd service

  handlers:
  - name: restart bitbucket service
    service:
       name: atlbitbucket
       state: restarted
    become: True
  - name: restart confluence service
    service:
       name: confluence
       state: restarted
    become: True
  - name: restart jira service
    service:
       name: jira
       state: restarted
    become: True
  - name: restart crowd service
    service:
       name: crowd
       state: restarted
    become: True
   
  vars:
    upstreams:
      bitbucket: "192.168.56.31:7990"
      confluence: "192.168.56.31:8090"
      jira: "192.168.56.31:8080"
      crowd: "192.168.56.31:8095"
    domain_name: "192.168.56.31.nip.io"

